class Solution {
public:
    bool searchMatrix(vector<vector<int>>& matrix, int target) {
        int i=0;
        int j= matrix[0].size()-1;
        int n= matrix.size();
        
        while(i<n && j>=0){
          if(target== matrix[i][j])
            return true;
            if(target < matrix[i][j])
             j--;
           else
           i++;
        }
        return false;
       }
    };
 Approach 2 (using binary search)
 
 class Solution {
public:
    bool searchMatrix(vector<vector<int>>& matrix, int target) {
        
       int n= matrix.size();
        int m= matrix[0].size();
        
        int low=0 , high= (n*m) -1;
        
        while(low<=high){
            int mid= (low + (high-low)/2);
            
            if(matrix[mid/m][mid%m]==target){
                return true;
            }
            if(matrix[mid/m][mid%m]<target){
                low= mid+1;
            }
            else{
                high= mid-1;
            }
        }
        return false;
    }
};
